name: Build Package

on:
  workflow_dispatch:

  push:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      # ## Tmate ##
      # - name: Setup TMATE Session
      #   uses: mxschmitt/action-tmate@v3

      - name: Generate ascii arts
        shell: bash
        run: |
          sudo apt update
          sudo apt install -y git jp2a fortune-mod
          
          IFS=$'\n'
          for i in $(ls logos); do
            name=$(sed 's/\..*//' <<< $i)
            name=${name,,}
            file=usr/share/bigfetch/ascii/$name.txt
            # Criar arte em ascii a partir de uma imagem
            jp2a --colors --chars=' #' --width=50 --output=$file "logos/$i"
            
            cin='\e[30;1m'                  # Cinza
            red='\e[31;1m'                  # Vermelho
            gre='\e[32;1m'                  # Verde
            yel='\e[33;1m'                  # Amarelo
            blu='\e[34;1m'                  # Azul
            ros='\e[35;1m'                  # Rosa
            cya='\e[36;1m'                  # Ciano
            neg='\e[37;1m'                  # Negrito
            
            color="$cya"
            
            # Adicionar informações a arte ascii
            sed -i -e '1i\' -e '' $file
            sed -i '5s/$/       $(echo -e "\'$color'")OS:$(echo -e "\\e[0m") $(grep -E '\''\\bNAME='\'' \/etc\/os-release | cut -d "=" -f2 | sed '\''s\/\\\"\/\/g'\'')/' $file
            sed -i '6s/$/       $(echo -e "\'$color'")Kernel:$(echo -e "\\e[0m") $(uname -r)/' $file
            sed -i '7s/$/       $(echo -e "\'$color'")Uptime:$(echo -e "\\e[0m") $(uptime -p | sed '\''s\/up \/\/'\'')/' $file
            sed -i '8s/$/       $(echo -e "\'$color'")Resolution:$(echo -e "\\e[0m") $(\/usr\/share\/bigfetch\/resolution.sh)/' $file
            sed -i '9s/$/       $(echo -e "\'$color'")DE:$(echo -e "\\e[0m") $(\/usr\/share\/bigfetch\/de.sh)/' $file
            sed -i '10s/$/       $(echo -e "\'$color'")Session Type:$(echo -e "\\e[0m") $(if [ "$XDG_SESSION_TYPE" = "x11" ];then echo Xorg; else echo $XDG_SESSION_TYPE; fi)/' $file
            sed -i '11s/$/       $(echo -e "\'$color'")CPU:$(echo -e "\\e[0m")$(grep "model name" \/proc\/cpuinfo | head -n1 | cut -d ":" -f2)/' $file
            sed -i '12s/$/       $(echo -e "\'$color'")GPU:$(echo -e "\\e[0m")$(\/usr\/share\/bigfetch\/gpu.sh)/' $file
            sed -i '13s/$/       $(echo -e "\'$color'")Memory:$(echo -e "\\e[0m") $(free -h | awk '\''NR==2{print $2}'\'')/' $file
          done
          
      - name: Fortune
        shell: bash
        run: |
          cd phrases
          strfile bigfetch-ptbr
          # strfile bigfetch-en
          # strfile bigfetch-es
          cd ..
          cp phrases/* usr/share/fortune/

      - name: Update github
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add --all
          if [ -n "$(git commit -m "update $(date +%y-%m-%d_%H:%M)" -a | grep "nothing to commit")" ];then exit 0; fi

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Send Hooks BigLinux Build Package
        shell: bash
        run: |
          if [ -z "$(grep biglinux-package-template pkgbuild/PKGBUILD)" ];then
            curl -X POST -H "Accept: application/json" -H "Authorization: token ${{ secrets.WEBHOOK_TOKEN }}" --data '{"event_type": "${{ github.repository }}", "client_payload": { "branch": "${{ github.ref_name }}", "url": "https://github.com/${{ github.repository }}"}}' https://api.github.com/repos/BigLinux-Package-Build/build-package/dispatches
            curl -X POST -H "Accept: application/json" -H "Authorization: token ${{ secrets.WEBHOOK_TOKEN }}" --data '{"event_type": "${{ github.repository }}", "client_payload": { "branch": "${{ github.ref_name }}", "url": "https://github.com/${{ github.repository }}"}}' https://api.github.com/repos/BigLinux-Package-Build/build-package-ARM/dispatches
          fi
